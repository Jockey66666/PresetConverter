package main

// Fx2PresetData :  data.json
type Fx2PresetData struct {
	Bpm         int    `json:"bpm"`
	Category    string `json:"category"`
	Description string `json:"description"`
	Version     string `json:"version"`
	Name        string `json:"name"`
	Scenes      struct {
		LatestEditedSceneSlot int           `json:"latestEditedSceneSlot"`
		Slot                  []interface{} `json:"slot"`
	} `json:"scenes"`
	SigPath  []SigpathElement  `json:"sigPath"`
	Embedded []EmbeddedAmpData `json:"embedded"`
}

// SigpathParam :  parameters
type SigpathParam struct {
	ID    int     `json:"id"`
	Value float64 `json:"value"`
}

// SigpathElement : sigpath data
type SigpathElement struct {
	AmpType          string         `json:"AmpType,omitempty"`
	ModulePresetName string         `json:"ModulePresetName"`
	Active           bool           `json:"active"`
	AmpID            string         `json:"ampId,omitempty"`
	DspID            string         `json:"dspId"`
	ID               string         `json:"id"`
	Param            []SigpathParam `json:"param"`
	Selected         bool           `json:"selected"`
	DistortionID     string         `json:"distortionId,omitempty"`
	DelayID          string         `json:"delayId,omitempty"`
	DodID            string         `json:"modId,omitempty"`
}

// EmbeddedAmpData : ampdata
type EmbeddedAmpData struct {
	EmbeddedType string      `json:"EmbeddedType"`
	AmpID        string      `json:"ampId"`
	ID           string      `json:"id"`
	AmpData      interface{} `json:"ampData"`
	MetaData     interface{} `json:"metaData"`
	PanelData    interface{} `json:"panelData"`
}

/*
type AutoGenerated struct {
	Bpm         int        `json:"bpm"`
	Category    string     `json:"category"`
	Description string     `json:"description"`
	Embedded    []Embedded `json:"embedded"`
	Name        string     `json:"name"`
	Scenes      Scenes     `json:"scenes"`
	SigPath     []SigPath  `json:"sigPath"`
	Version     string     `json:"version"`
}
type Params struct {
	ID    int `json:"id"`
	Value int `json:"value"`
}
type Items struct {
	ID       string   `json:"id"`
	IsActive bool     `json:"isActive"`
	Name     string   `json:"name"`
	Params   []Params `json:"params"`
	Selected string   `json:"selected"`
}
type Blocks struct {
	Items []Items `json:"items"`
}
type SigPath struct {
	Blocks Blocks `json:"blocks"`
}
type AmpData struct {
	SigPath SigPath `json:"sigPath"`
}
type MetaData struct {
	Description string `json:"description"`
	DisplayName string `json:"displayName"`
	ID          string `json:"id"`
	Version     string `json:"version"`
}
type Items struct {
	IndexID  string `json:"indexID"`
	ParamID  string `json:"paramID"`
	Position string `json:"position"`
	Res      string `json:"res"`
	Type     string `json:"type"`
}
type Elements struct {
	Items []Items `json:"items"`
}
type PanelData struct {
	Brand        string   `json:"brand"`
	CaseMaterial string   `json:"case_material"`
	Corner       string   `json:"corner"`
	Cover        string   `json:"cover"`
	Elements     Elements `json:"elements"`
	Handler      string   `json:"handler"`
	Panel        string   `json:"panel"`
	TemplateID   string   `json:"templateId"`
}
type DistortionData struct {
	PanelStyle string  `json:"panelStyle"`
	SigPath    SigPath `json:"sigPath"`
}
type MetaData struct {
	Category    string `json:"category"`
	Description string `json:"description"`
	DisplayName string `json:"displayName"`
	Features    []int  `json:"features"`
	ID          string `json:"id"`
	Version     string `json:"version"`
}
type PanelData struct {
	Box        string   `json:"Box"`
	Control    string   `json:"Control"`
	Texture    string   `json:"Texture"`
	Elements   Elements `json:"elements"`
	FontFamily string   `json:"font-family"`
	PanelStyle string   `json:"panelStyle"`
	ShowsKnobs int      `json:"showsKnobs"`
	TemplateID string   `json:"templateId"`
}
type DelayData struct {
	PanelStyle string  `json:"panelStyle"`
	SigPath    SigPath `json:"sigPath"`
}
type Embedded struct {
	EmbeddedType   string         `json:"EmbeddedType"`
	AmpData        AmpData        `json:"ampData,omitempty"`
	AmpID          string         `json:"ampId,omitempty"`
	ID             string         `json:"id"`
	MetaData       MetaData       `json:"metaData,omitempty"`
	PanelData      PanelData      `json:"panelData,omitempty"`
	DistortionData DistortionData `json:"distortionData,omitempty"`
	DistortionID   string         `json:"distortionId,omitempty"`
	MetaData       MetaData       `json:"metaData,omitempty"`
	PanelData      PanelData      `json:"panelData,omitempty"`
	DelayData      DelayData      `json:"delayData,omitempty"`
	DelayID        string         `json:"delayId,omitempty"`
	MetaData       MetaData       `json:"metaData,omitempty"`
	PanelData      PanelData      `json:"panelData,omitempty"`
}
type Scenes struct {
	LatestEditedSceneSlot int           `json:"latestEditedSceneSlot"`
	Slot                  []interface{} `json:"slot"`
}
type Param struct {
	ID    int     `json:"id"`
	Value float64 `json:"value"`
}
type Fx struct {
	ModulePresetName string  `json:"ModulePresetName"`
	Active           bool    `json:"active"`
	DspID            string  `json:"dspId"`
	ID               string  `json:"id"`
	Param            []Param `json:"param"`
	Selected         bool    `json:"selected"`
	AmpType          string  `json:"AmpType,omitempty"`
	AmpID            string  `json:"ampId,omitempty"`
	DelayID          string  `json:"delayId,omitempty"`
}
type SigPaths struct {
	Fx      []Fx `json:"Fx"`
	Enabled bool `json:"enabled"`
	Index   int  `json:"index"`
}
type SigPath struct {
	SigPaths []SigPaths `json:"sigPaths"`
	Type     string     `json:"type"`
}
type Channels struct {
	Delay int     `json:"delay"`
	Gain  float64 `json:"gain"`
	Index int     `json:"index"`
	Pan   float64 `json:"pan"`
}
type SigPath struct {
	ModulePresetName string     `json:"ModulePresetName,omitempty"`
	Active           bool       `json:"active"`
	DspID            string     `json:"dspId"`
	ID               string     `json:"id,omitempty"`
	Param            []Param    `json:"param,omitempty"`
	Selected         bool       `json:"selected"`
	DistortionID     string     `json:"distortionId,omitempty"`
	SigPath          []SigPath  `json:"sigPath,omitempty"`
	Channels         []Channels `json:"channels,omitempty"`
	Linked           bool       `json:"linked,omitempty"`
}
*/
/*



	type SigpathElement struct {
		ModulePresetName string `json:"ModulePresetName,omitempty"`
		Active           bool   `json:"active"`
		DspID            string `json:"dspId"`
		ID               string `json:"id,omitempty"`
		Selected     bool   `json:"selected"`
		DistortionID string `json:"distortionId,omitempty"`
		SigPath      []struct {
			SigPaths []struct {
				Fx []struct {
					AmpType          string `json:"AmpType"`
					ModulePresetName string `json:"ModulePresetName"`
					Active           bool   `json:"active"`
					AmpID            string `json:"ampId"`
					DspID            string `json:"dspId"`
					ID               string `json:"id"`
					Param            []struct {
						ID    int     `json:"id"`
						Value float64 `json:"value"`
					} `json:"param"`
					Selected bool `json:"selected"`
				} `json:"Fx"`
				Enabled bool `json:"enabled"`
				Index   int  `json:"index"`
			} `json:"sigPaths"`
			Type string `json:"type"`
		} `json:"sigPath,omitempty"`
		Channels []struct {
			Delay int     `json:"delay"`
			Gain  float64 `json:"gain"`
			Index int     `json:"index"`
			Pan   float64 `json:"pan"`
		} `json:"channels,omitempty"`
		Linked bool `json:"linked,omitempty"`
	}

*/
